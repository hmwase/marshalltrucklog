"use client"

// import React from 'react';
// import { Metadata } from 'next';
// import { Inter } from 'next/font/google';
// import './globals.css';
// import Navbar from '@/app/components/navbar/Navbar';
// import Link from 'next/link';
// const inter = Inter({ subsets: ['latin'] });
// import { LocalizationProvider } from '@mui/x-date-pickers';
// import { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';

// // export const metadata: Metadata = {
// //   title: 'Create Next App',
// //   description: 'Generated by create next app',
// // };



// export default function RootLayout({
//   children,
// }: {
//   children: React.ReactNode;
// }) {
//   return (
//     <LocalizationProvider dateAdapter={AdapterDayjs}>
//     <html lang="en">
//       <body className={inter.className}>
       
//         <Navbar />
//         <div className='navbar'>
//           <Link href="/check-in" className='tab'>Check-In</Link>
//           <Link href="/strippingout" className='tab'>Stripping Out</Link>
//           <Link href="/loading" className='tab'>Loading</Link>
//         </div>
//         {children}
   
//       </body>
//     </html>
//     </LocalizationProvider>
//   );
// }

// layout.tsx
import React from 'react';
import Navbar from '@/app/ui/navbar';
import Link from 'next/link';
import { inter} from '@/app/ui/fonts';
import './globals.css';
import LoadsProvider from '@/app/providers/LoadsContext';
import { LocalizationProvider } from '@mui/x-date-pickers';
import { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';
import { AppRouterCacheProvider } from '@mui/material-nextjs/v13-appRouter'; // or `v14-appRouter` if you are using Next.js v14
import Load from './lib/models/load';
export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    
    <LocalizationProvider dateAdapter={AdapterDayjs}>
     
        <html lang="en">
          <body className={`${inter.className} antialiased`}>
          <LoadsProvider>
            <Navbar />
            <AppRouterCacheProvider>{children}</AppRouterCacheProvider>
            </LoadsProvider>
         
          </body>
        </html>
     
</LocalizationProvider>

  );
}
